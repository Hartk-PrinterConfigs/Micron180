[gcode_macro PID_HOTEND]
gcode:
  {% set TEMP = params.TEMP|default(250)|int %}
  PID_CALIBRATE HEATER=extruder TARGET={TEMP}

[gcode_macro PID_BED]
gcode:
  {% set TEMP = params.TEMP|default(80)|int %}
  PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}

[gcode_macro Z_ENDSTOP]
gcode:
  Z_ENDSTOP_CALIBRATE

[gcode_macro PROBE_CAL]
gcode:
  HOME
  PROBE_CALIBRATE

[gcode_macro IS_CAL]
gcode:
  HOME
  SHAPER_CALIBRATE

[gcode_macro SPEEDTEST]
gcode: 

    
    {% set fmin = params.FMIN|default(300)|float * 60 %}
    {% set fmax = params.FMAX|default(400)|float * 60 %}
    {% set steps = params.STEPS|default(3)|int %}
    {% set cycles = params.CYCLES|default(1)|int %}

    {% set inset = 20.0|float %}
    {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
    {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
    {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
    {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}
    
    SAVE_GCODE_STATE NAME=speedtest_state
    HOME
    ABSOLUTE_COORDINATES
        {% for INTERVAL in range(steps) %}
            {% for REPEAT in range(cycles) %}
                {% if fmin == fmax %}
                    {% set feedrate = fmin %}
                {% else %}
                    {% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}
                {% endif %}
                M400 # Wait for queue to empty
                M117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}
                G1 F{feedrate} # set feedrate for the round
                G1 X{minX} Y{minY} # front left
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{maxX} Y{minY + (maxY-minY)/2} # mid right
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{minX} Y{minY} # front left
                G1 X{maxX} Y{maxY} # back right
                G1 X{maxX} Y{minY} # front right
                G1 X{minX} Y{maxY} # back left
            {% endfor %}
        {% endfor %}
    DISPLAYTEXT
    PARK
    RESTORE_GCODE_STATE NAME=speedtest_state    

[gcode_macro BadNoobTest]
gcode: 
  G28
  Probe_accuracy samples=100 sample_retract_dist=2.0
  Probe_accuracy samples=100 sample_retract_dist=10
  Probe_accuracy samples=100 sample_retract_dist=2.0
  Probe_accuracy samples=100 sample_retract_dist=10


[gcode_macro _KAMP_Test_Object]
description: This macro will generate a 30x30mm object in the center of your bed for testing KAMP

gcode:

    {% if printer.toolhead.axis_maximum.x == 0 or printer.toolhead.axis_maximum.y == 0 %}
        {action_respond_info("No axes maximums found... What is this, a toaster?")}
    {% else %}
        {% set obj_center_x = printer.toolhead.axis_maximum.x / 2 | float %}
        {% set obj_center_y = printer.toolhead.axis_maximum.y / 2 | float %}
        EXCLUDE_OBJECT_DEFINE NAME=KAMPSITE CENTER={obj_center_x},{obj_center_y} POLYGON=[[{obj_center_x - 15},{obj_center_y - 15}],[{obj_center_x - 15},{obj_center_y + 15}],[{obj_center_x + 15},{obj_center_y + 15}],[{obj_center_x + 15},{obj_center_y - 15}],[{obj_center_x - 15},{obj_center_y - 15}]]
    
        {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
        {% set x_min = all_points | map(attribute=0) | min %}
        {% set y_min = all_points | map(attribute=1) | min %}
        {% set x_max = all_points | map(attribute=0) | max %}
        {% set y_max = all_points | map(attribute=1) | max %}
    
        { action_respond_info("Debug object bounds: {!r}, {!r}, ready to test KAMP!".format(
            (x_min, y_min),
            (x_max, y_max),
        )) }
    {% endif %}